name: 'Build And Push'
description: 'Build And Push'

inputs:
  ecr_root:
    description: for ECR Repository Name (ecr_root/service)
    required: true
  service:
    description: for ECR Repository Name (ecr_root/service)
    required: true
  temp_tag:
    description: The tag name
    required: true
  tag:
    description: The tag name
    required: true
  aws-gh-action-role:
    description: "AWS github action role arn"
    required: true
  github-token:
    description: "GITHUB_TOKEN"
    required: true
runs:
  using: 'composite'
  steps:

    - name: Download Docker image artifact
      uses: actions/download-artifact@v2
      with:
        name: docker-image
        path: .

    - name: Load Docker image
      run: docker load -i image.tar
      shell: bash

    #- uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ inputs.aws-gh-action-role }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR Private
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Tag and Push Docker image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.ecr_root }}/${{ inputs.service }}
        #IMAGE_NAME=your-image-name
        TEMP_TAG: ${{ inputs.temp_tag }}
        IMAGE_TAG: ${{ inputs.tag }}
      run: |
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$TEMP_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      shell: bash
          #docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . --file docker/Dockerfile
          #docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
